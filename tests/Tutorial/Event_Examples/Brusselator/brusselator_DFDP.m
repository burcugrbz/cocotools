function dfdp = brusselator_DFDP(x, y, z, p)

r = p(:,4) ./ sqrt(p(:,5));
drdp = [0*p(:,1) 0*p(:,1) 0*p(:,1) 1./sqrt(p(:,5)) ...
    -0.5*p(:,4)./p(:,5).^(3/2) 0*p(:,1)];
A = p(:,3)./(1 + exp(r)) .* ...
    (exp(r .* z) + exp(r .* (1 - z)));
dAdp = [0*p(:,1) 0*p(:,1) 1./(1 + exp(r)) .* ...
    (exp(r .* z) + exp(r .* (1 - z))) 0*p(:,1) 0*p(:,1) ...
    0*p(:,1)] + ...
    repmat(( -p(:,3).*exp(r)./(1 + exp(r)).^2 .* ...
    (exp(r .* z) + exp(r .* (1 - z))) +...
    p(:,3)./(1 + exp(r)) .*...
    (z.*exp(r .* z) + (1-z).*exp(r .* (1 - z))) ), [1 6]).*drdp;

f = [-p(:,4).^2./p(:,1).*((p(:,6) + 1).*x - x.^2.*y - A) ...
    -p(:,4).^2./p(:,2).*(x.^2.*y - p(:,6).*x)];

dfdp = [p(:,4).^2./p(:,1).^2.*((p(:,6) + 1).*x - x.^2.*y - A) + ...
    p(:,4).^2./p(:,1).*dAdp(:,1) ...
    0*p(:,1) ...
    p(:,4).^2./p(:,1).*dAdp(:,2) ...
    p(:,4).^2./p(:,2).^2.*(x.^2.*y - p(:,6).*x) ...
    p(:,4).^2./p(:,1).*dAdp(:,3) ...
    0*p(:,1) ...
    -2*p(:,4)./p(:,1).*((p(:,6) + 1).*x-x.^2.*y - A) + ...
    p(:,4).^2./p(:,1).*dAdp(:,4) ...
    -2*p(:,4)./p(:,2).*(x.^2.*y - p(:,6).*x) ...
    p(:,4).^2./p(:,1).*dAdp(:,5) ...
    0*p(:,1) ...
    -p(:,4).^2./p(:,1).*x + p(:,4).^2./p(:,1).*dAdp(:,6) ...
    p(:,4).^2./p(:,2).*x
    ];

end

